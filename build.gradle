buildscript {
	ext {
		queryDslVersion = "5.0.0"
		kotlin_version = '1.3.72'
	}
}

plugins {
	id 'org.springframework.boot' version '2.7.3'
	id 'io.spring.dependency-management' version '1.0.13.RELEASE'
	id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.7.20-RC'
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"

	// for kotlin migration
	id "org.jetbrains.kotlin.plugin.allopen" version "1.8.20"
	id "org.jetbrains.kotlin.plugin.spring" version "1.8.20"
	id "org.jetbrains.kotlin.plugin.noarg" version "1.8.20"
}

group = 'plub'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

apply plugin : 'java'
apply plugin : 'kotlin'

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.projectlombok:lombok:1.18.22'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

	// postgresql
	implementation group: 'org.postgresql', name: 'postgresql', version: '42.2.26'

	// jjwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.2'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.2'

	// apple
	implementation group: 'org.bouncycastle', name: 'bcpkix-jdk15on', version: '1.56'

	// swagger 추가
	implementation 'io.springfox:springfox-swagger2:2.9.2'
	implementation 'io.springfox:springfox-swagger-ui:2.9.2'

	// aws s3
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
	testImplementation 'io.findify:s3mock_2.13:0.2.6'

	// redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// queryDSL
	implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
	implementation "com.querydsl:querydsl-apt:${queryDslVersion}"


	// fcm
	implementation("com.google.firebase:firebase-admin:6.8.1")
	implementation("com.squareup.okhttp3:okhttp:4.9.1")

	// json simple
	implementation("com.googlecode.json-simple:json-simple:1.1.1")

	// aop
	implementation("org.springframework.boot:spring-boot-starter-aop")

	// geo ip
	implementation("com.maxmind.geoip2:geoip2:2.15.0")

	// cloudWatch log
	implementation("ca.pjer:logback-awslogs-appender:1.6.0")

	// jasypt
	implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.4'

	// for kotlin migration
	implementation 'org.jetbrains.kotlin:kotlin-reflect'
	implementation 'org.jetbrains.kotlin:kotlin-stdlib'
}

tasks.named('test') {
	useJUnitPlatform()
}

// 빌드시 -plain.jar 생기는 설정 끄기 (for Github Actions)
jar {
	enabled = false
}

// jar 빌드 파일 이름 변경
bootJar {
	archiveFileName = "plub-server.jar"
}

// queryDSL
def querydslDir = "$buildDir/generated/querydsl"
querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}
sourceSets {
	main.java.srcDir querydslDir
}
compileQuerydsl{
	options.annotationProcessorPath = configurations.querydsl
}
configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom compileClasspath
}

// for kotlin migration
compileKotlin {
	kotlinOptions {
		jvmTarget = JavaVersion.VERSION_1_8.toString()
	}
}

compileTestKotlin {
	kotlinOptions {
		jvmTarget = JavaVersion.VERSION_1_8.toString()
	}
}

allOpen {
	annotation("javax.persistence.Entity")
	annotation("javax.persistence.MappedSuperclass")
	annotation("javax.persistence.Embeddable")
}

noArg {
	annotation("javax.persistence.Entity")
	annotation("javax.persistence.MappedSuperclass")
	annotation("javax.persistence.Embeddable")
}